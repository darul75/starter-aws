/** 
* @license starter-aws - v0.0.6
* (c) 2013 Julien VALERY https://github.com/darul75/starter-aws
* License: MIT 
**/
function StarterAws(){this.options={debug:!0};var a=this;this.instancesState=[],this.init(),this.ec2=new AWS.EC2(this.options),this.starter(function(b,c){b?console.log(b):a.options.debug&&console.log(c)})}var AWS=require("aws-sdk"),config=require("./config.js");StarterAws.prototype.init=function(){var a=process.argv.splice(2);return a.length<5?(process.argv=process.argv.concat(a),void 0):(a.forEach(function(a,b){console.log(b+": "+a)}),this.options.accessKeyId=a[0],this.options.secretAccessKey=a[1],this.options.region=a[2],this.options.instancesId=a[3],this.options.state=a[4],process.argv=process.argv.concat(a),this)},StarterAws.prototype.initCredentials=function(a){return a.accessKeyId&&a.secretAccessKey&&a.region&&a.instancesId?(f.extend(this.options,a),this.ec2=new AWS.EC2(this.options),this):next(new Error("missing parameters: <AWS-accessKeyId> <AWS-secretAccessKey> <AWS-region> <AWS-instancesId>"))},StarterAws.prototype.initFileCredentials=function(){var a=this;return config.init("./credentials.json",function(b){return 0!==b?(console.log("Could not load config file."),void 0):(f.extend(a.options,config),void 0)}),this.options.accessKeyId&&this.options.secretAccessKey&&this.options.region&&this.options.instancesId?(this.ec2=new AWS.EC2(this.options),this):next(new Error("missing parameters: <AWS-accessKeyId> <AWS-secretAccessKey> <AWS-region> <AWS-instancesId>"))},StarterAws.prototype.starter=function(a){if(console.log("----- call starter  ----- "),!(this.options.accessKeyId&&this.options.secretAccessKey&&this.options.region&&this.options.instancesId&&this.options.state))return a(new Error("missing parameters: <AWS-accessKeyId> <AWS-secretAccessKey> <AWS-region> <AWS-instancesId> <state>"));console.log("----- instances state forced to  : "+this.options.state);var b;switch(this.options.state){case"stop":b=this.ec2.stopInstances;break;case"reboot":b=this.ec2.rebootInstances;break;default:b=this.ec2.startInstances}return b.apply(this.ec2,paramsFunctions(this.options,a)),this},StarterAws.prototype.start=function(a){return this.options.state="start",this.starter(a),this},StarterAws.prototype.stop=function(a){return this.options.state="stop",this.starter(a),this},StarterAws.prototype.reboot=function(a){return this.options.state="reboot",this.starter(a),this},StarterAws.prototype.status=function(a){return console.log("----- status aws instance(s) "),a(null,this.instancesState)},StarterAws.prototype.daemon=function(a){if(console.log("----- starting daemon"),!this.options.accessKeyId||!this.options.secretAccessKey||!this.options.region)return a(new Error("missing parameters: <AWS-accessKeyId> <AWS-secretAccessKey> <AWS-region>"));var b=this;return this.timeoutId=setInterval(function(){console.log("----- getting aws info "),b.ec2.describeInstances({},function(c,d){if(c)return console.log("--- daemon stopped because of :"+c),clearInterval(this_timeoutId),a(c);var e=d.Reservations;return b.instancesState=[],e.forEach(function(a){var c=a;c.Instances.forEach(function(a){b.instancesState.push({InstanceId:a.InstanceId,ImageId:a.ImageId,InstanceType:a.InstanceType,State:a.State.Name})})}),b.daemonStop(),a(null,b.instancesState)})},6e4),this},StarterAws.prototype.daemonStop=function(){return console.log("----- stopping daemon"),this.timeoutId&&clearInterval(this.timeoutId),this};var paramsFunctions=function(a,b){return[{InstanceIds:a.instancesId.split(",")},function(a){return a?(console.log(a.toString()),b(a.toString())):b(null,"ok")}]},f={extend:function(a,b){if(!b||"function"==typeof b)return a;for(var c in b)a[c]=b[c];return a}},starterAws=new StarterAws;module.exports=starterAws;