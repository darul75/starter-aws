/** 
* @license starter-aws - v0.0.1
* (c) 2013 Julien VALERY https://github.com/darul75/starter-aws
* License: MIT 
**/
function StarterAws(){this.options={},this.init(),this.ec2=new AWS.EC2(this.options),this.starter(this.options,function(a,b){a?console.log(a):console.log(b)})}var AWS=require("aws-sdk");StarterAws.prototype.init=function(){var a=process.argv.splice(2);return a.length<5?(process.argv=process.argv.concat(a),void 0):(a.forEach(function(a,b){console.log(b+": "+a)}),this.options.accessKeyId=a[0],this.options.secretAccessKey=a[1],this.options.region=a[2],this.options.instancesId=a[3].split(","),this.options.start=a[4],process.argv=process.argv.concat(a),this)},StarterAws.prototype.starter=function(a,b){if(!(a.accessKeyId&&a.secretAccessKey&&a.region&&a.instancesId&&a.start))return b(new Error("missing parameters: <AWS-accessKeyId> <AWS-secretAccessKey> <AWS-region> <AWS-instancesId> <state>"));console.log("----- instances state forced to  : "+a.start);var c;switch(a.start){case"stop":c=this.ec2.stopInstances;break;case"reboot":c=this.ec2.rebootInstances;break;default:c=this.ec2.startInstances}return c.apply(this.ec2,params(a,b)),this},StarterAws.prototype.start=function(a,b){return a.accessKeyId&&a.secretAccessKey&&a.region&&a.instancesId?(console.log("----- starting aws instance(s) "),this.ec2.startInstances.apply(this.ec2,params(a,b)),this):b(new Error("missing parameters: <AWS-accessKeyId> <AWS-secretAccessKey> <AWS-region> <AWS-instancesId>"))},StarterAws.prototype.stop=function(a,b){return a.accessKeyId&&a.secretAccessKey&&a.region&&a.instancesId?(console.log("----- stopping aws instance(s) "),this.ec2.stopInstances.apply(this.ec2,params(a,b)),this):b(new Error("missing parameters: <AWS-accessKeyId> <AWS-secretAccessKey> <AWS-region> <AWS-instancesId>"))},StarterAws.prototype.reboot=function(a,b){return a.accessKeyId&&a.secretAccessKey&&a.region&&a.instancesId?(console.log("----- reboot aws instance(s) "),this.ec2.rebootInstances.apply(this.ec2,params(a,b)),this):b(new Error("missing parameters: <AWS-accessKeyId> <AWS-secretAccessKey> <AWS-region> <AWS-instancesId>"))};var params=function(a,b){return[{InstanceIds:a.instancesId},function(a){return a?(console.log(a),b(a)):b(null,"ok")}]},starterAws=new StarterAws;module.exports=starterAws;