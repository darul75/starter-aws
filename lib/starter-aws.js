/** 
* @license starter-aws - v0.0.3
* (c) 2013 Julien VALERY https://github.com/darul75/starter-aws
* License: MIT 
**/
function StarterAws(){this.options={},this.instancesState=[],this.init(),this.ec2=new AWS.EC2(this.options),this.starter(this.options,function(a,b){a?console.log(a):console.log(b)}),this.daemon(this.options,function(a,b){a?console.log(a):console.log(b)})}var AWS=require("aws-sdk");StarterAws.prototype.init=function(){var a=process.argv.splice(2);return a.length<5?(process.argv=process.argv.concat(a),void 0):(a.forEach(function(a,b){console.log(b+": "+a)}),this.options.accessKeyId=a[0],this.options.secretAccessKey=a[1],this.options.region=a[2],this.options.instancesId=a[3].split(","),this.options.state=a[4],process.argv=process.argv.concat(a),this)},StarterAws.prototype.starter=function(a,b){if(!(a.accessKeyId&&a.secretAccessKey&&a.region&&a.instancesId&&a.state))return b(new Error("missing parameters: <AWS-accessKeyId> <AWS-secretAccessKey> <AWS-region> <AWS-instancesId> <state>"));console.log("----- instances state forced to  : "+a.state);var c;switch(a.state){case"stop":c=this.ec2.stopInstances;break;case"reboot":c=this.ec2.rebootInstances;break;default:c=this.ec2.startInstances}return c.apply(this.ec2,params(a,b)),this},StarterAws.prototype.start=function(a,b){return a.accessKeyId&&a.secretAccessKey&&a.region&&a.instancesId?(console.log("----- starting aws instance(s) "),this.ec2.startInstances.apply(this.ec2,params(a,b)),this):b(new Error("missing parameters: <AWS-accessKeyId> <AWS-secretAccessKey> <AWS-region> <AWS-instancesId>"))},StarterAws.prototype.stop=function(a,b){return a.accessKeyId&&a.secretAccessKey&&a.region&&a.instancesId?(console.log("----- stopping aws instance(s) "),this.ec2.stopInstances.apply(this.ec2,params(a,b)),this):b(new Error("missing parameters: <AWS-accessKeyId> <AWS-secretAccessKey> <AWS-region> <AWS-instancesId>"))},StarterAws.prototype.reboot=function(a,b){return a.accessKeyId&&a.secretAccessKey&&a.region&&a.instancesId?(console.log("----- reboot aws instance(s) "),this.ec2.rebootInstances.apply(this.ec2,params(a,b)),this):b(new Error("missing parameters: <AWS-accessKeyId> <AWS-secretAccessKey> <AWS-region> <AWS-instancesId>"))},StarterAws.prototype.status=function(a){return console.log("----- status aws instance(s) "),a(null,this.instancesState)},StarterAws.prototype.daemon=function(a,b){if(!a.accessKeyId||!a.secretAccessKey||!a.region)return b(new Error("missing parameters: <AWS-accessKeyId> <AWS-secretAccessKey> <AWS-region>"));var c=this,d=setInterval(function(){console.log("----- getting aws info "),c.ec2.describeInstances({},function(a,e){if(a)return console.log(a),clearInterval(d),b(a);var f=e.Reservations;c.instancesState=[];var g=0;return f.forEach(function(a){var b=a;b.Instances.forEach(function(a){a.State;c.instancesState.push({InstanceId:a.InstanceId,ImageId:a.ImageId,InstanceType:a.InstanceType,State:a.State.Name})})}),g++,b(null,c.instancesState)})},3e3);return this};var params=function(a,b){return[{InstanceIds:a.instancesId},function(a){return a?(console.log(a),b(a)):b(null,"ok")}]},starterAws=new StarterAws;module.exports=starterAws;